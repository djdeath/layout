// Translator:
//
// Transforms the LayoutParser's AST into a JavaScript AST.
let LayoutTranslator = ometa(GenericMatcher) {
  trans  =  [:t apply(t):ans]            -> ans,

  number   :n                            -> [#number, n],
  name     :s                            -> [#name, s],
  string   :s                            -> [#string, s],
  arr      trans*:xs                     -> [#arr].concat(xs),

  get      :x                            -> [#get, x],
  getp     trans:fd trans:x              -> [#getp, fd, x],
  send     :msg trans:recv trans*:args   -> [#send, msg, recv].concat(args),
  call     trans:fn trans*:args          -> [#call, fn].concat(args),


  unop     :op trans:x                   -> [#unop, op, x],
  binop    :op trans:x trans:y           -> [#binop, op, x, y],

  //
  currentChild :p                        -> [#getp, [#string, p], [#getp, [#get, "index"], [#get, "children"]]],
  parent       :p                        -> [#getp, [#string, p], [#get, "parent"]],
  child        trans:i :p                -> [#getp, [#string, p], [#getp, [#binop,"+", [#get, "index"], i], [#get, "children"]]],

  //
  calcExpr     trans:e                   -> [#return, e],
  condCalcExpr trans:c trans:e           -> [#if, c, [#return, e], [#get, "undefined"]],

  assoc :p trans*:ee                     -> [#set,
                                             [#getp, [#string, p], [#get, "result"]],
                                             [#call, [#func, [], [#beginTop].concat(ee)]]],

  allocation trans*:ee                   -> [#beginTop, [#func,
                                                         ["result","index","parent","children"],
                                                         [#beginTop].concat(ee)]],
};
